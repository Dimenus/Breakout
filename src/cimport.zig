pub const opengl = @import("cimport/gl.zig");
pub const vulkan = @import("cimport/vulkan.zig");
pub const glfw = @import("cimport/glfw.zig");
pub const vma = @import("cimport/vma.zig");
pub const ktx = @import("cimport/ktx.zig");
pub const mpg = @import("cimport/mpg.zig");
pub const soundio = @import("cimport/soundio.zig");

pub const ptrdiff_t = c_long;
pub const wchar_t = c_int;
pub const max_align_t = extern struct {
    __clang_max_align_nonce1: c_longlong,
    __clang_max_align_nonce2: c_longdouble,
};
pub const __u_char = u8;
pub const __u_short = c_ushort;
pub const __u_int = c_uint;
pub const __u_long = c_ulong;
pub const __int8_t = i8;
pub const __uint8_t = u8;
pub const __int16_t = c_short;
pub const __uint16_t = c_ushort;
pub const __int32_t = c_int;
pub const __uint32_t = c_uint;
pub const __int64_t = c_long;
pub const __uint64_t = c_ulong;
pub const __int_least8_t = __int8_t;
pub const __uint_least8_t = __uint8_t;
pub const __int_least16_t = __int16_t;
pub const __uint_least16_t = __uint16_t;
pub const __int_least32_t = __int32_t;
pub const __uint_least32_t = __uint32_t;
pub const __int_least64_t = __int64_t;
pub const __uint_least64_t = __uint64_t;
pub const __quad_t = c_long;
pub const __u_quad_t = c_ulong;
pub const __intmax_t = c_long;
pub const __uintmax_t = c_ulong;
pub const __dev_t = c_ulong;
pub const __uid_t = c_uint;
pub const __gid_t = c_uint;
pub const __ino_t = c_ulong;
pub const __ino64_t = c_ulong;
pub const __mode_t = c_uint;
pub const __nlink_t = c_ulong;
pub const __off_t = c_long;
pub const __off64_t = c_long;
pub const __pid_t = c_int;
pub const __fsid_t = extern struct {
    __val: [2]c_int,
};
pub const __clock_t = c_long;
pub const __rlim_t = c_ulong;
pub const __rlim64_t = c_ulong;
pub const __id_t = c_uint;
pub const __time_t = c_long;
pub const __useconds_t = c_uint;
pub const __suseconds_t = c_long;
pub const __daddr_t = c_int;
pub const __key_t = c_int;
pub const __clockid_t = c_int;
pub const __timer_t = ?*c_void;
pub const __blksize_t = c_long;
pub const __blkcnt_t = c_long;
pub const __blkcnt64_t = c_long;
pub const __fsblkcnt_t = c_ulong;
pub const __fsblkcnt64_t = c_ulong;
pub const __fsfilcnt_t = c_ulong;
pub const __fsfilcnt64_t = c_ulong;
pub const __fsword_t = c_long;
pub const __ssize_t = c_long;
pub const __syscall_slong_t = c_long;
pub const __syscall_ulong_t = c_ulong;
pub const __loff_t = __off64_t;
pub const __caddr_t = [*c]u8;
pub const __intptr_t = c_long;
pub const __socklen_t = c_uint;
pub const __sig_atomic_t = c_int;
pub const int_least8_t = __int_least8_t;
pub const int_least16_t = __int_least16_t;
pub const int_least32_t = __int_least32_t;
pub const int_least64_t = __int_least64_t;
pub const uint_least8_t = __uint_least8_t;
pub const uint_least16_t = __uint_least16_t;
pub const uint_least32_t = __uint_least32_t;
pub const uint_least64_t = __uint_least64_t;
pub const int_fast8_t = i8;
pub const int_fast16_t = c_long;
pub const int_fast32_t = c_long;
pub const int_fast64_t = c_long;
pub const uint_fast8_t = u8;
pub const uint_fast16_t = c_ulong;
pub const uint_fast32_t = c_ulong;
pub const uint_fast64_t = c_ulong;
pub const intmax_t = __intmax_t;
pub const uintmax_t = __uintmax_t;
pub const UINTMAX_MAX = if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Pointer) @ptrCast(__UINT64_C, 18446744073709551615) else if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Int) @intToPtr(__UINT64_C, 18446744073709551615) else __UINT64_C(18446744073709551615);
pub const __GLsync = struct___GLsync;
pub const __WCHAR_WIDTH__ = 32;
pub const __CONSTANT_CFSTRINGS__ = 1;
pub const __RLIM_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __USE_POSIX199309 = 1;
pub const __WCHAR_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-__WCHAR_MAX, -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-__WCHAR_MAX, -1) else (-__WCHAR_MAX)(-1);
pub const __UINT_LEAST8_MAX__ = 255;
pub const __PTRDIFF_MAX__ = c_long(9223372036854775807);
pub const __UINTMAX_WIDTH__ = 64;
pub const __DBL_MAX__ = 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878;
pub const __restrict_arr = __restrict;
pub const __INO64_T_TYPE = __UQUAD_TYPE;
pub const __SIZE_FMTo__ = "lo";
pub const __UINT_FAST16_FMTx__ = "hx";
pub const __MWAITX__ = 1;
pub const __INT_MAX__ = 2147483647;
pub const __UINT_LEAST16_MAX__ = 65535;
pub const __XSAVES__ = 1;
pub const __PRI64_PREFIX = "l";
pub const __UINT8_FMTu__ = "hhu";
pub const __WORDSIZE_TIME64_COMPAT32 = 1;
pub const __INT_LEAST16_TYPE__ = short;
pub const __attribute_copy__ = arg;
pub const __SIZEOF_INT__ = 4;
pub const __ATOMIC_ACQ_REL = 4;
pub const __SYSCALL_SLONG_TYPE = __SLONGWORD_TYPE;
pub const __FLT16_MAX_EXP__ = 15;
pub const __ID_T_TYPE = __U32_TYPE;
pub const __SIZEOF_SHORT__ = 2;
pub const __UINT16_FMTX__ = "hX";
pub const __BLKCNT64_T_TYPE = __SQUAD_TYPE;
pub const __USE_XOPEN2K = 1;
pub const __PRFCHW__ = 1;
pub const __USE_FORTIFY_LEVEL = 0;
pub const __USE_XOPEN2K8 = 1;
pub const __DBL_MANT_DIG__ = 53;
pub const __SIZEOF_SIZE_T__ = 8;
pub const __UINT_LEAST16_FMTo__ = "ho";
pub const __code_model_small_ = 1;
pub const __INT16_MAX__ = 32767;
pub const __WINT_WIDTH__ = 32;
pub const __SHRT_MAX__ = 32767;
pub const __znver1__ = 1;
pub const __GCC_ATOMIC_BOOL_LOCK_FREE = 2;
pub const __INT_FAST32_TYPE__ = int;
pub const __KEY_T_TYPE = __S32_TYPE;
pub const __INT8_FMTd__ = "hhd";
pub const __XSAVE__ = 1;
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE = 2;
pub const __UINT32_FMTX__ = "X";
pub const __USE_ISOC99 = 1;
pub const ____gwchar_t_defined = 1;
pub const __INT_LEAST16_FMTd__ = "hd";
pub const __INT_LEAST64_FMTd__ = "ld";
pub const __UINT_LEAST16_FMTX__ = "hX";
pub const __amd64__ = 1;
pub const __PTRDIFF_FMTi__ = "li";
pub const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE = 2;
pub const __GCC_ATOMIC_LLONG_LOCK_FREE = 2;
pub const __clang_version__ = "8.0.0 (tags/RELEASE_800/final)";
pub const __UINT_LEAST8_FMTo__ = "hho";
pub const __ptr_t = [*c]void;
pub const __NLINK_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __INT_FAST16_FMTi__ = "hi";
pub const __INT64_C_SUFFIX__ = L;
pub const __UINT_FAST16_FMTu__ = "hu";
pub const __INTPTR_FMTi__ = "li";
pub const __MOVBE__ = 1;
pub const __CLOCK_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __UINT_LEAST8_FMTX__ = "hhX";
pub const __FLT16_DIG__ = 3;
pub const __SIZEOF_LONG__ = 8;
pub const __TIME_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __NO_INLINE__ = 1;
pub const __DBL_MAX_10_EXP__ = 308;
pub const __RLIM_T_MATCHES_RLIM64_T = 1;
pub const __INTMAX_C_SUFFIX__ = L;
pub const __time64_t = __time_t;
pub const __USE_POSIX = 1;
pub const __GCC_ATOMIC_LONG_LOCK_FREE = 2;
pub const __STDC__ = 1;
pub const __INT_FAST16_MAX__ = 32767;
pub const __FLT_DENORM_MIN__ = 0.000000;
pub const __UINT16_FMTu__ = "hu";
pub const __clang_patchlevel__ = 0;
pub const __USE_ISOC11 = 1;
pub const __UINTMAX_FMTx__ = "lx";
pub const __amd64 = 1;
pub const __OPENCL_MEMORY_SCOPE_WORK_ITEM = 0;
pub const __DBL_HAS_INFINITY__ = 1;
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL = 1;
pub const __tune_znver1__ = 1;
pub const __STDC_HOSTED__ = 1;
pub const __USE_ISOC95 = 1;
pub const __warnattr = msg;
pub const __FLT_DIG__ = 6;
pub const __UINT_LEAST16_FMTu__ = "hu";
pub const __TIME64_T_TYPE = __TIME_T_TYPE;
pub const __UINT_FAST32_FMTX__ = "X";
pub const __LDBL_REDIR_DECL = name;
pub const __OFF64_T_TYPE = __SQUAD_TYPE;
pub const __DBL_EPSILON__ = 0.000000;
pub const __INT16_FMTi__ = "hi";
pub const __FSWORD_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __UINT32_C_SUFFIX__ = U;
pub const __STDC_UTF_16__ = 1;
pub const __UINTMAX_C_SUFFIX__ = UL;
pub const __POPCNT__ = 1;
pub const __INT_FAST16_FMTd__ = "hd";
pub const __UINT_LEAST32_FMTu__ = "u";
pub const __GNU_LIBRARY__ = 6;
pub const __UINT16_FMTx__ = "hx";
pub const __LONG_LONG_MAX__ = c_longlong(9223372036854775807);
pub const __BIGGEST_ALIGNMENT__ = 16;
pub const __PTRDIFF_FMTd__ = "ld";
pub const __UINT16_MAX__ = 65535;
pub const __WINT_UNSIGNED__ = 1;
pub const __INT_FAST32_MAX__ = 2147483647;
pub const __PRAGMA_REDEFINE_EXTNAME = 1;
pub const __CPU_MASK_TYPE = __SYSCALL_ULONG_TYPE;
pub const __UINT_FAST64_FMTu__ = "lu";
pub const __INT_FAST16_TYPE__ = short;
pub const __LDBL_DECIMAL_DIG__ = 21;
pub const __SLONG32_TYPE = int;
pub const __CLANG_ATOMIC_BOOL_LOCK_FREE = 2;
pub const __SSE4_2__ = 1;
pub const __BLKSIZE_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __LDBL_HAS_DENORM__ = 1;
pub const __GLIBC_USE_LIB_EXT2 = 0;
pub const __x86_64__ = 1;
pub const __ORDER_BIG_ENDIAN__ = 4321;
pub const __gl_glext_h_ = 1;
pub const __SIZEOF_INT128__ = 16;
pub const __glibc_c99_flexarr_available = 1;
pub const __linux = 1;
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE = 2;
pub const __INT_LEAST32_FMTi__ = "i";
pub const __LDBL_EPSILON__ = 0.000000;
pub const __STDC_UTF_32__ = 1;
pub const __SIZEOF_DOUBLE__ = 8;
pub const __SIZE_FMTX__ = "lX";
pub const __PID_T_TYPE = __S32_TYPE;
pub const __znver1 = 1;
pub const __SCHAR_MAX__ = 127;
pub const __ELF__ = 1;
pub const __UINT64_FMTX__ = "lX";
pub const __GLIBC_USE_DEPRECATED_SCANF = 0;
pub const __PRIPTR_PREFIX = "l";
pub const __UINTPTR_MAX__ = c_ulong(18446744073709551615);
pub const __UINT_LEAST8_FMTu__ = "hhu";
pub const __SIZEOF_WCHAR_T__ = 4;
pub const __BMI__ = 1;
pub const __GCC_ATOMIC_INT_LOCK_FREE = 2;
pub const __UINT_FAST16_FMTo__ = "ho";
pub const __SIZE_FMTx__ = "lx";
pub const __llvm__ = 1;
pub const __UINT_FAST64_MAX__ = c_ulong(18446744073709551615);
pub const __INT32_MAX__ = 2147483647;
pub const __UINT_LEAST32_MAX__ = c_uint(4294967295);
pub const __INTPTR_MAX__ = c_long(9223372036854775807);
pub const __FLT16_MIN_10_EXP__ = -13;
pub const __ATOMIC_SEQ_CST = 5;
pub const __SIZEOF_LONG_LONG__ = 8;
pub const __GNUC_STDC_INLINE__ = 1;
pub const __UINT16_FMTo__ = "ho";
pub const __OPENCL_MEMORY_SCOPE_DEVICE = 2;
pub const __FLT_MAX__ = 340282346999999984391321947108527833088.000000;
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE = 2;
pub const __UINTPTR_FMTx__ = "lx";
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = 1;
pub const __SHA__ = 1;
pub const __ADX__ = 1;
pub const __PIE__ = 2;
pub const __UINT_FAST32_FMTo__ = "o";
pub const __LP64__ = 1;
pub const __XSAVEOPT__ = 1;
pub const __INO_T_MATCHES_INO64_T = 1;
pub const __UINT_LEAST32_FMTx__ = "x";
pub const __INT_LEAST16_FMTi__ = "hi";
pub const __LDBL_MAX_EXP__ = 16384;
pub const __FLT16_HAS_DENORM__ = 1;
pub const __UINT_FAST8_FMTX__ = "hhX";
pub const __UINT_FAST16_FMTX__ = "hX";
pub const __UINTMAX_FMTo__ = "lo";
pub const __F16C__ = 1;
pub const __FLT_RADIX__ = 2;
pub const __FLT16_DECIMAL_DIG__ = 5;
pub const __INT64_FMTi__ = "li";
pub const __GID_T_TYPE = __U32_TYPE;
pub const __UINT_LEAST64_FMTX__ = "lX";
pub const __UINT_FAST64_FMTo__ = "lo";
pub const __UINT8_FMTX__ = "hhX";
pub const __ORDER_LITTLE_ENDIAN__ = 1234;
pub const __CLANG_ATOMIC_LONG_LOCK_FREE = 2;
pub const __AVX__ = 1;
pub const __UINT_FAST8_MAX__ = 255;
pub const __DBL_MIN_10_EXP__ = -307;
pub const __SSE4A__ = 1;
pub const __SSE3__ = 1;
pub const __UINT_FAST32_FMTu__ = "u";
pub const __pie__ = 2;
pub const __UINT64_C_SUFFIX__ = UL;
pub const __INT_FAST32_FMTd__ = "d";
pub const __OPENCL_MEMORY_SCOPE_SUB_GROUP = 4;
pub const __GLIBC__ = 2;
pub const __INT_LEAST64_MAX__ = c_long(9223372036854775807);
pub const __AVX2__ = 1;
pub const __TIMESIZE = __WORDSIZE;
pub const __OPENCL_MEMORY_SCOPE_WORK_GROUP = 1;
pub const __LITTLE_ENDIAN__ = 1;
pub const __FLT_MAX_10_EXP__ = 38;
pub const __S32_TYPE = int;
pub const __gnu_linux__ = 1;
pub const __INT_FAST8_FMTd__ = "hhd";
pub const __USE_POSIX199506 = 1;
pub const __FLT_MAX_EXP__ = 128;
pub const __INT_FAST64_FMTi__ = "li";
pub const __CHAR_BIT__ = 8;
pub const __GNUC_MINOR__ = 2;
pub const __FLT_EPSILON__ = 0.000000;
pub const __FLT_HAS_INFINITY__ = 1;
pub const __OFF_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __DBL_HAS_QUIET_NAN__ = 1;
pub const __WCHAR_MAX = __WCHAR_MAX__;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT = 0;
pub const __SSE2__ = 1;
pub const __INT8_FMTi__ = "hhi";
pub const __INT_FAST64_MAX__ = c_long(9223372036854775807);
pub const __BMI2__ = 1;
pub const __SIZEOF_POINTER__ = 8;
pub const __TIMER_T_TYPE = [*c]void;
pub const __unix = 1;
pub const __GCC_ATOMIC_POINTER_LOCK_FREE = 2;
pub const __CLFLUSHOPT__ = 1;
pub const __linux__ = 1;
pub const __UINTMAX_FMTX__ = "lX";
pub const __INO_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __FSBLKCNT_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __UINT_LEAST64_MAX__ = c_ulong(18446744073709551615);
pub const __SSIZE_T_TYPE = __SWORD_TYPE;
pub const __SIZEOF_PTRDIFF_T__ = 8;
pub const __RDRND__ = 1;
pub const __UINTMAX_FMTu__ = "lu";
pub const __FSFILCNT64_T_TYPE = __UQUAD_TYPE;
pub const __FD_SETSIZE = 1024;
pub const __UINT64_FMTx__ = "lx";
pub const __UINTPTR_WIDTH__ = 64;
pub const __AES__ = 1;
pub const __UINT_FAST64_FMTx__ = "lx";
pub const __SIZE_WIDTH__ = 64;
pub const __clang_major__ = 8;
pub const __UINT32_FMTu__ = "u";
pub const __UINT64_FMTo__ = "lo";
pub const __INT64_MAX__ = c_long(9223372036854775807);
pub const __SIG_ATOMIC_WIDTH__ = 32;
pub const __UINT_FAST64_FMTX__ = "lX";
pub const __DBL_MIN_EXP__ = -1021;
pub const __USECONDS_T_TYPE = __U32_TYPE;
pub const __FLOAT128__ = 1;
pub const __UID_T_TYPE = __U32_TYPE;
pub const __SYSCALL_ULONG_TYPE = __ULONGWORD_TYPE;
pub const __CLANG_ATOMIC_POINTER_LOCK_FREE = 2;
pub const __INT32_FMTd__ = "d";
pub const __INTPTR_WIDTH__ = 64;
pub const __FLT16_HAS_INFINITY__ = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = 1;
pub const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES = 3;
pub const __UINTMAX_MAX__ = c_ulong(18446744073709551615);
pub const __BLKCNT_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __INT_FAST32_FMTi__ = "i";
pub const __ATOMIC_RELEASE = 3;
pub const __SIZEOF_LONG_DOUBLE__ = 16;
pub const __SSE2_MATH__ = 1;
pub const __STDC_IEC_559__ = 1;
pub const __UINT64_FMTu__ = "lu";
pub const __GNUC__ = 4;
pub const __DBL_MAX_EXP__ = 1024;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = 1;
pub const __GLIBC_USE_IEC_60559_BFP_EXT = 0;
pub const __ATOMIC_CONSUME = 1;
pub const __INTMAX_MAX__ = c_long(9223372036854775807);
pub const __INTMAX_FMTd__ = "ld";
pub const __CLANG_ATOMIC_CHAR_LOCK_FREE = 2;
pub const __SSSE3__ = 1;
pub const __FSFILCNT_T_TYPE = __SYSCALL_ULONG_TYPE;
pub const __SIG_ATOMIC_MAX__ = 2147483647;
pub const __UINT64_MAX__ = c_ulong(18446744073709551615);
pub const __UINT8_FMTo__ = "hho";
pub const __UINT_FAST8_FMTu__ = "hhu";
pub const __POINTER_WIDTH__ = 64;
pub const __PIC__ = 2;
pub const __INT16_FMTd__ = "hd";
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = 1;
pub const __INTMAX_WIDTH__ = 64;
pub const __INT_FAST8_FMTi__ = "hhi";
pub const __FLT_MANT_DIG__ = 24;
pub const __INTPTR_FMTd__ = "ld";
pub const __GNUC_PATCHLEVEL__ = 1;
pub const __LDBL_HAS_QUIET_NAN__ = 1;
pub const __LDBL_MIN_EXP__ = -16381;
pub const __INT_LEAST16_MAX__ = 32767;
pub const __UINT32_FMTo__ = "o";
pub const __OBJC_BOOL_IS_BOOL = 0;
pub const __SSE4_1__ = 1;
pub const __DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__;
pub const __DEV_T_TYPE = __UQUAD_TYPE;
pub const __INT32_FMTi__ = "i";
pub const __HAVE_GENERIC_SELECTION = 1;
pub const __ATOMIC_RELAXED = 0;
pub const __XSAVEC__ = 1;
pub const __UINT_FAST16_MAX__ = 65535;
pub const __MODE_T_TYPE = __U32_TYPE;
pub const __INT_LEAST32_TYPE__ = int;
pub const __FLT16_MIN_EXP__ = -14;
pub const __CLANG_ATOMIC_INT_LOCK_FREE = 2;
pub const __STD_TYPE = typedef;
pub const __FLT16_MAX_10_EXP__ = 4;
pub const __INT32_TYPE__ = int;
pub const __INT_LEAST8_FMTd__ = "hhd";
pub const __UINT_FAST32_MAX__ = c_uint(4294967295);
pub const __GCC_ATOMIC_CHAR_LOCK_FREE = 2;
pub const __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
pub const __FLT_MIN_10_EXP__ = -37;
pub const __UINT_FAST8_FMTx__ = "hhx";
pub const __CLZERO__ = 1;
pub const __UINTPTR_FMTu__ = "lu";
pub const __SYSCALL_WORDSIZE = 64;
pub const __INT64_FMTd__ = "ld";
pub const __LZCNT__ = 1;
pub const __FMA__ = 1;
pub const __MMX__ = 1;
pub const __USE_MISC = 1;
pub const __UINT_LEAST64_FMTx__ = "lx";
pub const __NO_MATH_INLINES = 1;
pub const __WCHAR_TYPE__ = int;
pub const __PTRDIFF_WIDTH__ = 64;
pub const __USE_ATFILE = 1;
pub const __FLT_DECIMAL_DIG__ = 9;
pub const __DBL_DIG__ = 15;
pub const __UINT_LEAST16_FMTx__ = "hx";
pub const __VERSION__ = "4.2.1 Compatible Clang 8.0.0 (tags/RELEASE_800/final)";
pub const __UINT_LEAST64_FMTo__ = "lo";
pub const __SIZEOF_WINT_T__ = 4;
pub const __SIZEOF_FLOAT128__ = 16;
pub const __DADDR_T_TYPE = __S32_TYPE;
pub const __UINT_LEAST32_FMTo__ = "o";
pub const __FLT_MIN_EXP__ = -125;
pub const __UINT_LEAST64_FMTu__ = "lu";
pub const __INT_FAST64_FMTd__ = "ld";
pub const __UINT_LEAST8_FMTx__ = "hhx";
pub const __DBL_DENORM_MIN__ = 0.000000;
pub const __SIZE_FMTu__ = "lu";
pub const __PCLMUL__ = 1;
pub const __LDBL_MIN_10_EXP__ = -4931;
pub const __clang__ = 1;
pub const __LDBL_DIG__ = 18;
pub const __WORDSIZE = 64;
pub const __FLT_HAS_DENORM__ = 1;
pub const __FINITE_MATH_ONLY__ = 0;
pub const __GCC_ATOMIC_SHORT_LOCK_FREE = 2;
pub const __CLANG_ATOMIC_SHORT_LOCK_FREE = 2;
pub const __USE_POSIX2 = 1;
pub const __LDBL_MANT_DIG__ = 64;
pub const __SSE__ = 1;
pub const __LDBL_MAX__ = inf;
pub const __UINTPTR_FMTX__ = "lX";
pub const __FLT_MIN__ = 0.000000;
pub const __UINT_LEAST32_FMTX__ = "X";
pub const __INT_FAST8_MAX__ = 127;
pub const __INTMAX_FMTi__ = "li";
pub const __UINT8_MAX__ = 255;
pub const __attribute_alloc_size__ = params;
pub const __INT_LEAST8_MAX__ = 127;
pub const __STDC_VERSION__ = c_long(201112);
pub const __INT_LEAST8_FMTi__ = "hhi";
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 = 1;
pub const __RDSEED__ = 1;
pub const __FSGSBASE__ = 1;
pub const __FLT_EVAL_METHOD__ = 0;
pub const __SSE_MATH__ = 1;
pub const __UINT_FAST8_FMTo__ = "hho";
pub const __INT8_MAX__ = 127;
pub const __DBL_DECIMAL_DIG__ = 17;
pub const __LONG_MAX__ = c_long(9223372036854775807);
pub const __pic__ = 2;
pub const __LDBL_DENORM_MIN__ = 0.000000;
pub const __ATOMIC_ACQUIRE = 2;
pub const __UINT_FAST32_FMTx__ = "x";
pub const __GLIBC_USE_DEPRECATED_GETS = 0;
pub const __x86_64 = 1;
pub const __GLIBC_MINOR__ = 29;
pub const __LDBL_MIN__ = 0.000000;
pub const __CLANG_ATOMIC_LLONG_LOCK_FREE = 2;
pub const __clang_minor__ = 0;
pub const __CLOCKID_T_TYPE = __S32_TYPE;
pub const __UINT8_FMTx__ = "hhx";
pub const __SUSECONDS_T_TYPE = __SYSCALL_SLONG_TYPE;
pub const __GXX_ABI_VERSION = 1002;
pub const __INT_LEAST64_FMTi__ = "li";
pub const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE = 2;
pub const __FLT16_MANT_DIG__ = 11;
pub const __OFF_T_MATCHES_OFF64_T = 1;
pub const __RLIM64_T_TYPE = __UQUAD_TYPE;
pub const __FXSR__ = 1;
pub const __UINT32_FMTx__ = "x";
pub const __SIZE_MAX__ = c_ulong(18446744073709551615);
pub const __USE_POSIX_IMPLICITLY = 1;
pub const __LDBL_MAX_10_EXP__ = 4932;
pub const __SIZEOF_FLOAT__ = 4;
pub const __INT_LEAST32_FMTd__ = "d";
pub const __STDC_IEC_559_COMPLEX__ = 1;
pub const __FSBLKCNT64_T_TYPE = __UQUAD_TYPE;
pub const __DBL_HAS_DENORM__ = 1;
pub const __FLT16_HAS_QUIET_NAN__ = 1;
pub const __WINT_MAX__ = c_uint(4294967295);
pub const __STDC_ISO_10646__ = c_long(201706);
pub const __INT_LEAST32_MAX__ = 2147483647;
pub const __FLT_HAS_QUIET_NAN__ = 1;
pub const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE = 2;
pub const __DBL_MIN__ = 0.000000;
pub const __ORDER_PDP_ENDIAN__ = 3412;
pub const __INT16_TYPE__ = short;
pub const __UINT32_MAX__ = c_uint(4294967295);
pub const __unix__ = 1;
pub const __LDBL_HAS_INFINITY__ = 1;
pub const __UINTPTR_FMTo__ = "lo";
pub const __WCHAR_MAX__ = 2147483647;
pub const SCNdFAST8 = "hhd";
pub const PRIoLEAST8 = "o";
pub const INTPTR_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-c_long(9223372036854775807), -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-c_long(9223372036854775807), -1) else (-c_long(9223372036854775807))(-1);
pub const UINTPTR_MAX = c_ulong(18446744073709551615);
pub const SCNx8 = "hhx";
pub const VULKAN_H_ = 1;
pub const INT8_MIN = -128;
pub const WCHAR_MIN = __WCHAR_MIN;
pub const SCNxFAST8 = "hhx";
pub const SCNuLEAST16 = "hu";
pub const SCNuFAST8 = "hhu";
pub const PRIxLEAST8 = "x";
pub const PRIoFAST8 = "o";
pub const KHRONOS_SUPPORT_FLOAT = 1;
pub const PRIdFAST8 = "d";
pub const PRIdLEAST16 = "d";
pub const SCNo32 = "o";
pub const unix = 1;
pub const _BITS_TYPESIZES_H = 1;
pub const PRIu8 = "u";
pub const INT32_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-2147483647, -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-2147483647, -1) else (-2147483647)(-1);
pub const SIG_ATOMIC_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-2147483647, -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-2147483647, -1) else (-2147483647)(-1);
pub const PRId16 = "d";
pub const PRIX32 = "X";
pub const SCNxLEAST32 = "x";
pub const SCNi16 = "hi";
pub const SCNdLEAST8 = "hhd";
pub const VULKAN_CORE_H_ = 1;
pub const _LP64 = 1;
pub const PRIiLEAST8 = "i";
pub const _INTTYPES_H = 1;
pub const INT16_MAX = 32767;
pub const PRIi8 = "i";
pub const KHRONOS_SUPPORT_INT64 = 1;
pub const SCNx32 = "x";
pub const WINT_MIN = c_uint(0);
pub const _BITS_WCHAR_H = 1;
pub const SCNo8 = "hho";
pub const _STDINT_H = 1;
pub const PRIoLEAST32 = "o";
pub const SCNd8 = "hhd";
pub const INT_LEAST8_MIN = -128;
pub const UINT64_MAX = if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Pointer) @ptrCast(__UINT64_C, 18446744073709551615) else if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Int) @intToPtr(__UINT64_C, 18446744073709551615) else __UINT64_C(18446744073709551615);
pub const _BITS_TYPES_H = 1;
pub const INT16_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-32767, -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-32767, -1) else (-32767)(-1);
pub const PRIuFAST8 = "u";
pub const SCNiLEAST8 = "hhi";
pub const linux = 1;
pub const _POSIX_SOURCE = 1;
pub const INT_FAST8_MIN = -128;
pub const _BITS_STDINT_INTN_H = 1;
pub const INT_FAST32_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-c_long(9223372036854775807), -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-c_long(9223372036854775807), -1) else (-c_long(9223372036854775807))(-1);
pub const WINT_MAX = c_uint(4294967295);
pub const PRId32 = "d";
pub const PRIx32 = "x";
pub const SCNi32 = "i";
pub const SCNu32 = "u";
pub const HANDMADE_MATH__USE_SSE = 1;
pub const SCNd16 = "hd";
pub const PRIu32 = "u";
pub const SCNoLEAST8 = "hho";
pub const UINT8_MAX = 255;
pub const PRIXFAST8 = "X";
pub const _BITS_TIME64_H = 1;
pub const PTRDIFF_MAX = c_long(9223372036854775807);
pub const UINT16_MAX = 65535;
pub const PRIXLEAST8 = "X";
pub const SCNiLEAST32 = "i";
pub const NULL = if (@typeId(@TypeOf(0)) == @import("builtin").TypeId.Pointer) @ptrCast([*c]void, 0) else if (@typeId(@TypeOf(0)) == @import("builtin").TypeId.Int) @intToPtr([*c]void, 0) else ([*c]void)(0);
pub const UINT_LEAST32_MAX = c_uint(4294967295);
pub const SCNo16 = "ho";
pub const PRIxLEAST16 = "x";
pub const UINT_FAST32_MAX = c_ulong(18446744073709551615);
pub const INTPTR_MAX = c_long(9223372036854775807);
pub const PRIXLEAST32 = "X";
pub const SCNiLEAST16 = "hi";
pub const PRIX8 = "X";
pub const PRIiLEAST16 = "i";
pub const SIG_ATOMIC_MAX = 2147483647;
pub const PRIuLEAST8 = "u";
pub const INT_FAST16_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-c_long(9223372036854775807), -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-c_long(9223372036854775807), -1) else (-c_long(9223372036854775807))(-1);
pub const SCNi8 = "hhi";
pub const PRIuLEAST32 = "u";
pub const _STDC_PREDEF_H = 1;
pub const KHRONOS_MAX_ENUM = 2147483647;
pub const SCNxLEAST16 = "hx";
pub const PRIo32 = "o";
pub const SCNdLEAST16 = "hd";
pub const SCNd32 = "d";
pub const INT32_MAX = 2147483647;
pub const INT_FAST32_MAX = c_long(9223372036854775807);
pub const UINT_LEAST8_MAX = 255;
pub const SCNuLEAST32 = "u";
pub const _POSIX_C_SOURCE = c_long(200809);
pub const UINT_FAST16_MAX = c_ulong(18446744073709551615);
pub const PRIxFAST8 = "x";
pub const INT8_MAX = 127;
pub const INT_LEAST16_MAX = 32767;
pub const PRIo8 = "o";
pub const PRId8 = "d";
pub const SCNiFAST8 = "hhi";
pub const _ATFILE_SOURCE = 1;
pub const SCNoLEAST16 = "ho";
pub const _DEFAULT_SOURCE = 1;
pub const SIZE_MAX = c_ulong(18446744073709551615);
pub const SCNoLEAST32 = "o";
pub const PRIi16 = "i";
pub const SCNxLEAST8 = "hhx";
pub const PRIiLEAST32 = "i";
pub const INT_LEAST32_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-2147483647, -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-2147483647, -1) else (-2147483647)(-1);
pub const APIENTRYP = [*c]APIENTRY;
pub const UINT_LEAST16_MAX = 65535;
pub const INT_LEAST64_MAX = if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Pointer) @ptrCast(__INT64_C, 9223372036854775807) else if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Int) @intToPtr(__INT64_C, 9223372036854775807) else __INT64_C(9223372036854775807);
pub const PRIi32 = "i";
pub const SCNdLEAST32 = "d";
pub const INT_FAST8_MAX = 127;
pub const SCNuLEAST8 = "hhu";
pub const INT_LEAST16_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-32767, -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-32767, -1) else (-32767)(-1);
pub const INTMAX_MAX = if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Pointer) @ptrCast(__INT64_C, 9223372036854775807) else if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Int) @intToPtr(__INT64_C, 9223372036854775807) else __INT64_C(9223372036854775807);
pub const _DEBUG = 1;
pub const UINT_FAST8_MAX = 255;
pub const PRIX16 = "X";
pub const SCNu8 = "hhu";
pub const PRIuLEAST16 = "u";
pub const UINT32_MAX = c_uint(4294967295);
pub const WCHAR_MAX = __WCHAR_MAX;
pub const UINT_FAST64_MAX = if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Pointer) @ptrCast(__UINT64_C, 18446744073709551615) else if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Int) @intToPtr(__UINT64_C, 18446744073709551615) else __UINT64_C(18446744073709551615);
pub const PRIo16 = "o";
pub const INT64_MAX = if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Pointer) @ptrCast(__INT64_C, 9223372036854775807) else if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Int) @intToPtr(__INT64_C, 9223372036854775807) else __INT64_C(9223372036854775807);
pub const PRIdLEAST8 = "d";
pub const SCNoFAST8 = "hho";
pub const INT_LEAST32_MAX = 2147483647;
pub const PRIoLEAST16 = "o";
pub const PRIxLEAST32 = "x";
pub const _SYS_CDEFS_H = 1;
pub const PRIx8 = "x";
pub const UINT_LEAST64_MAX = if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Pointer) @ptrCast(__UINT64_C, 18446744073709551615) else if (@typeId(@TypeOf(18446744073709551615)) == @import("builtin").TypeId.Int) @intToPtr(__UINT64_C, 18446744073709551615) else __UINT64_C(18446744073709551615);
pub const PTRDIFF_MIN = if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Pointer) @ptrCast(-c_long(9223372036854775807), -1) else if (@typeId(@TypeOf(-1)) == @import("builtin").TypeId.Int) @intToPtr(-c_long(9223372036854775807), -1) else (-c_long(9223372036854775807))(-1);
pub const PRIdLEAST32 = "d";
pub const PRIiFAST8 = "i";
pub const INT_FAST16_MAX = c_long(9223372036854775807);
pub const INT_FAST64_MAX = if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Pointer) @ptrCast(__INT64_C, 9223372036854775807) else if (@typeId(@TypeOf(9223372036854775807)) == @import("builtin").TypeId.Int) @intToPtr(__INT64_C, 9223372036854775807) else __INT64_C(9223372036854775807);
pub const _FEATURES_H = 1;
pub const PRIx16 = "x";
pub const PRIXLEAST16 = "X";
pub const SCNu16 = "hu";
pub const INT_LEAST8_MAX = 127;
pub const PRIu16 = "u";
pub const SCNx16 = "hx";
pub const _BITS_STDINT_UINTN_H = 1;
pub const _cl_context = struct__cl_context;
pub const _cl_event = struct__cl_event;
